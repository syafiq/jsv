Graph.removeKeys(D,function(F){return 0>mxUtils.indexOf(S,F)});this.updateCellStyles(D,N)};Graph.prototype.updateCellStyles=function(D,N){this.model.beginUpdate();try{for(var S=0;S<N.length;S++)if(this.model.isVertex(N[S])||this.model.isEdge(N[S])){var F=this.getCellStyle(N[S],!1),K;for(K in D){var R=D[K];F[K]!=R&&this.setCellStyles(K,R,[N[S]])}}}finally{this.model.endUpdate()}};Graph.prototype.isFastZoomEnabled=function(){return"nocss"!=urlParams.zoom&&!mxClient.NO_FO&&!mxClient.IS_EDGE&&!this.useCssTransforms&&
(this.isCssTransformsSupported()||mxClient.IS_IOS)};Graph.prototype.isCssTransformsSupported=function(){return this.dialect==mxConstants.DIALECT_SVG&&!mxClient.NO_FO&&(!this.lightbox||!mxClient.IS_SF)};Graph.prototype.getCellAt=function(D,N,S,F,K,R){this.useCssTransforms&&(D=D/this.currentScale-this.currentTranslate.x,N=N/this.currentScale-this.currentTranslate.y);return this.getScaledCellAt.apply(this,arguments)};Graph.prototype.getScaledCellAt=function(D,N,S,F,K,R){F=null!=F?F:!0;K=null!=K?K:!0;
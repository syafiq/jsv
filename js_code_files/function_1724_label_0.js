0;T<S.length;T++)B=F(1,S[T].x,S[T].y)||B}R=x[x.length-1];B=F(0,R.x,R.y)||B}r.routedPoints=C;return B}return!1};var d=mxConnector.prototype.paintLine;mxConnector.prototype.paintLine=function(r,x,B){this.routedPoints=null!=this.state?this.state.routedPoints:null;if(this.outline||null==this.state||null==this.style||null==this.state.routedPoints||0==this.state.routedPoints.length)d.apply(this,arguments);else{var C=mxUtils.getValue(this.style,mxConstants.STYLE_ARCSIZE,mxConstants.LINE_ARCSIZE)/2,F=(parseInt(mxUtils.getValue(this.style,
"jumpSize",Graph.defaultJumpSize))-2)/2+this.strokewidth,H=mxUtils.getValue(this.style,"jumpStyle","none"),E=!0,N=null,Q=null,S=[],R=null;r.begin();for(var ba=0;ba<this.state.routedPoints.length;ba++){var T=this.state.routedPoints[ba],P=new mxPoint(T.x/this.scale,T.y/this.scale);0==ba?P=x[0]:ba==this.state.routedPoints.length-1&&(P=x[x.length-1]);var Y=!1;if(null!=N&&1==T.type){var ka=this.state.routedPoints[ba+1];T=ka.x/this.scale-P.x;ka=ka.y/this.scale-P.y;T=T*T+ka*ka;null==R&&(R=new mxPoint(P.x-
N.x,P.y-N.y),Q=Math.sqrt(R.x*R.x+R.y*R.y),0<Q?(R.x=R.x*F/Q,R.y=R.y*F/Q):R=null);T>F*F&&0<Q&&(T=N.x-P.x,ka=N.y-P.y,T=T*T+ka*ka,T>F*F&&(Y=new mxPoint(P.x-R.x,P.y-R.y),T=new mxPoint(P.x+R.x,P.y+R.y),S.push(Y),this.addPoints(r,S,B,C,!1,null,E),S=0>Math.round(R.x)||0==Math.round(R.x)&&0>=Math.round(R.y)?1:-1,E=!1,"sharp"==H?(r.lineTo(Y.x-R.y*S,Y.y+R.x*S),r.lineTo(T.x-R.y*S,T.y+R.x*S),r.lineTo(T.x,T.y)):"line"==H?(r.moveTo(Y.x+R.y*S,Y.y-R.x*S),r.lineTo(Y.x-R.y*S,Y.y+R.x*S),r.moveTo(T.x-R.y*S,T.y+R.x*S),
r.lineTo(T.x+R.y*S,T.y-R.x*S),r.moveTo(T.x,T.y)):"arc"==H?(S*=1.3,r.curveTo(Y.x-R.y*S,Y.y+R.x*S,T.x-R.y*S,T.y+R.x*S,T.x,T.y)):(r.moveTo(T.x,T.y),E=!0),S=[T],Y=!0))}else R=null;Y||(S.push(P),N=P)}this.addPoints(r,S,B,C,!1,null,E);r.stroke()}};var h=mxGraphView.prototype.getFixedTerminalPoint;mxGraphView.prototype.getFixedTerminalPoint=function(r,x,B,C){return null!=x&&"centerPerimeter"==x.style[mxConstants.STYLE_PERIMETER]?new mxPoint(x.getCenterX(),x.getCenterY()):h.apply(this,arguments)};var n=mxGraphView.prototype.updateFloatingTerminalPoint;
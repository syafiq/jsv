function(D){for(var M={},R=0;R<D.length;R++){var G=this.view.getState(D[R]);this.mergeStyle(G.style,M,0==R)}return M};Graph.prototype.mergeStyle=function(D,M,R){if(null!=D){var G={},L;for(L in D){var Q=D[L];null!=Q&&(G[L]=!0,null==M[L]&&R?M[L]=Q:M[L]!=Q&&delete M[L])}for(L in M)G[L]||delete M[L]}};Graph.prototype.getStartEditingCell=function(D,M){M=this.getCellStyle(D);M=parseInt(mxUtils.getValue(M,mxConstants.STYLE_STARTSIZE,0));this.isTable(D)&&(!this.isSwimlane(D)||0==M)&&""==this.getLabel(D)&&
0<this.model.getChildCount(D)&&(D=this.model.getChildAt(D,0),M=this.getCellStyle(D),M=parseInt(mxUtils.getValue(M,mxConstants.STYLE_STARTSIZE,0)));if(this.isTableRow(D)&&(!this.isSwimlane(D)||0==M)&&""==this.getLabel(D)&&0<this.model.getChildCount(D))for(M=0;M<this.model.getChildCount(D);M++){var R=this.model.getChildAt(D,M);if(this.isCellEditable(R)){D=R;break}}return D};Graph.prototype.copyStyle=function(D){return this.getCellStyle(D,!1)};Graph.prototype.pasteStyle=function(D,M,R){R=null!=R?R:Graph.pasteStyles;
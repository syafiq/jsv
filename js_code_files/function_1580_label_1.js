ka[1].geometry.x-(ka[1].geometry.width+ba.x+40):ka[1].geometry.x+(ka[1].geometry.width-ba.x+40),ka[1].geometry.y=null==ca?K.geometry.y+(K.geometry.height-ka[1].geometry.height)/2:(ca.y+ca.height)/pa-da.y+-ba.y+10);return g.addCells(ka,T)}finally{g.model.endUpdate()}}function Q(K,V,T){K=g.getOutgoingTreeEdges(K);T=g.view.getState(T);var Z=[];if(null!=T&&null!=K){for(var X=0;X<K.length;X++){var ka=g.view.getState(g.model.getTerminal(K[X],!1));null!=ka&&(!V&&Math.min(ka.x+ka.width,T.x+T.width)>=Math.max(ka.x,
T.x)||V&&Math.min(ka.y+ka.height,T.y+T.height)>=Math.max(ka.y,T.y))&&Z.push(ka)}Z.sort(function(q,E){return V?q.x+q.width-E.x-E.width:q.y+q.height-E.y-E.height})}return Z}function d(K,V){var T=M(K),Z=V==mxConstants.DIRECTION_EAST||V==mxConstants.DIRECTION_WEST;(T==mxConstants.DIRECTION_EAST||T==mxConstants.DIRECTION_WEST)==Z&&T!=V?f.actions.get("selectParent").funct():T==V?(V=g.getOutgoingTreeEdges(K),null!=V&&0<V.length&&g.setSelectionCell(g.model.getTerminal(V[0],!1))):(T=g.getIncomingTreeEdges(K),
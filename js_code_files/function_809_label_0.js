v+.855*t);c.end();c.stroke()};mxCellRenderer.registerShape("sumEllipse",ua);mxUtils.extend(xa,mxRhombus);xa.prototype.paintVertexShape=function(c,m,v,n,t){mxRhombus.prototype.paintVertexShape.apply(this,arguments);c.setShadow(!1);c.begin();c.moveTo(m,v+t/2);c.lineTo(m+n,v+t/2);c.end();c.stroke()};mxCellRenderer.registerShape("sortShape",xa);mxUtils.extend(Ca,mxEllipse);Ca.prototype.paintVertexShape=function(c,m,v,n,t){c.begin();c.moveTo(m,v);c.lineTo(m+n,v);c.lineTo(m+n/2,v+t/2);c.close();c.fillAndStroke();
c.begin();c.moveTo(m,v+t);c.lineTo(m+n,v+t);c.lineTo(m+n/2,v+t/2);c.close();c.fillAndStroke()};mxCellRenderer.registerShape("collate",Ca);mxUtils.extend(La,mxEllipse);La.prototype.paintVertexShape=function(c,m,v,n,t){var z=c.state.strokeWidth/2,C=10+2*z,fa=v+t-C/2;c.begin();c.moveTo(m,v);c.lineTo(m,v+t);c.moveTo(m+z,fa);c.lineTo(m+z+C,fa-C/2);c.moveTo(m+z,fa);c.lineTo(m+z+C,fa+C/2);c.moveTo(m+z,fa);c.lineTo(m+n-z,fa);c.moveTo(m+n,v);c.lineTo(m+n,v+t);c.moveTo(m+n-z,fa);c.lineTo(m+n-C-z,fa-C/2);c.moveTo(m+
function(K){B.apply(this,arguments);this.graph.model.isEdge(K.cell)&&1!=K.style[mxConstants.STYLE_CURVED]&&this.updateLineJumps(K)};mxGraphView.prototype.updateLineJumps=function(K){var R=K.absolutePoints;if(Graph.lineJumpsEnabled){var d=null!=K.routedPoints,f=null;if(null!=R&&null!=this.validEdges&&"none"!==mxUtils.getValue(K.style,"jumpStyle","none")){var g=function(oa,sa,J){var V=new mxPoint(sa,J);V.type=oa;f.push(V);V=null!=K.routedPoints?K.routedPoints[f.length-1]:null;return null==V||V.type!=
oa||V.x!=sa||V.y!=J},u=.5*this.scale;d=!1;f=[];for(var x=0;x<R.length-1;x++){for(var A=R[x+1],H=R[x],P=[],M=R[x+2];x<R.length-2&&mxUtils.ptSegDistSq(H.x,H.y,M.x,M.y,A.x,A.y)<1*this.scale*this.scale;)A=M,x++,M=R[x+2];d=g(0,H.x,H.y)||d;for(var G=0;G<this.validEdges.length;G++){var ia=this.validEdges[G],ja=ia.absolutePoints;if(null!=ja&&mxUtils.intersects(K,ia)&&"1"!=ia.style.noJump)for(ia=0;ia<ja.length-1;ia++){var ha=ja[ia+1],ba=ja[ia];for(M=ja[ia+2];ia<ja.length-2&&mxUtils.ptSegDistSq(ba.x,ba.y,M.x,
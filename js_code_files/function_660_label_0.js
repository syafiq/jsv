R.appendChild(R.resizeSensor);"static"==q(R,"position")&&(R.style.position="relative");var f=R.resizeSensor.childNodes[0],g=f.childNodes[0],u=R.resizeSensor.childNodes[1],x=function(){g.style.width="100000px";g.style.height="100000px";f.scrollLeft=1E5;f.scrollTop=1E5;u.scrollLeft=1E5;u.scrollTop=1E5};x();var A=!1,H=function(){R.resizedAttached&&(A&&(R.resizedAttached.call(),A=!1),b(H))};b(H);var P,M,G,ia;d=function(){if((G=R.offsetWidth)!=P||(ia=R.offsetHeight)!=M)A=!0,P=G,M=ia;x()};var ja=function(ha,
ba,oa){ha.attachEvent?ha.attachEvent("on"+ba,oa):ha.addEventListener(ba,oa)};ja(f,"scroll",d);ja(u,"scroll",d)}var N=function(){GraphViewer.resizeSensorEnabled&&l()},S=Object.prototype.toString.call(k),F="[object Array]"===S||"[object NodeList]"===S||"[object HTMLCollection]"===S||"undefined"!==typeof jQuery&&k instanceof jQuery||"undefined"!==typeof Elements&&k instanceof Elements;if(F){S=0;for(var K=k.length;S<K;S++)D(k[S],N)}else D(k,N);this.detach=function(){if(F)for(var R=0,d=k.length;R<d;R++)e.detach(k[R]);
function(r){g.apply(this,arguments);this.graph.model.isEdge(r.cell)&&1!=r.style[mxConstants.STYLE_CURVED]&&this.updateLineJumps(r)};mxGraphView.prototype.updateLineJumps=function(r){var x=r.absolutePoints;if(Graph.lineJumpsEnabled){var B=null!=r.routedPoints,C=null;if(null!=x&&null!=this.validEdges&&"none"!==mxUtils.getValue(r.style,"jumpStyle","none")){var F=function(fa,ra,L){var V=new mxPoint(ra,L);V.type=fa;C.push(V);V=null!=r.routedPoints?r.routedPoints[C.length-1]:null;return null==V||V.type!=
fa||V.x!=ra||V.y!=L},H=.5*this.scale;B=!1;C=[];for(var E=0;E<x.length-1;E++){for(var N=x[E+1],Q=x[E],S=[],R=x[E+2];E<x.length-2&&mxUtils.ptSegDistSq(Q.x,Q.y,R.x,R.y,N.x,N.y)<1*this.scale*this.scale;)N=R,E++,R=x[E+2];B=F(0,Q.x,Q.y)||B;for(var ba=0;ba<this.validEdges.length;ba++){var T=this.validEdges[ba],P=T.absolutePoints;if(null!=P&&mxUtils.intersects(r,T)&&"1"!=T.style.noJump)for(T=0;T<P.length-1;T++){var Y=P[T+1],ka=P[T];for(R=P[T+2];T<P.length-2&&mxUtils.ptSegDistSq(ka.x,ka.y,R.x,R.y,Y.x,Y.y)<
1*this.scale*this.scale;)Y=R,T++,R=P[T+2];R=mxUtils.intersection(Q.x,Q.y,N.x,N.y,ka.x,ka.y,Y.x,Y.y);if(null!=R&&(Math.abs(R.x-Q.x)>H||Math.abs(R.y-Q.y)>H)&&(Math.abs(R.x-N.x)>H||Math.abs(R.y-N.y)>H)&&(Math.abs(R.x-ka.x)>H||Math.abs(R.y-ka.y)>H)&&(Math.abs(R.x-Y.x)>H||Math.abs(R.y-Y.y)>H)){Y=R.x-Q.x;ka=R.y-Q.y;R={distSq:Y*Y+ka*ka,x:R.x,y:R.y};for(Y=0;Y<S.length;Y++)if(S[Y].distSq>R.distSq){S.splice(Y,0,R);R=null;break}null==R||0!=S.length&&S[S.length-1].x===R.x&&S[S.length-1].y===R.y||S.push(R)}}}for(T=
0;T<S.length;T++)B=F(1,S[T].x,S[T].y)||B}R=x[x.length-1];B=F(0,R.x,R.y)||B}r.routedPoints=C;return B}return!1};var d=mxConnector.prototype.paintLine;mxConnector.prototype.paintLine=function(r,x,B){this.routedPoints=null!=this.state?this.state.routedPoints:null;if(this.outline||null==this.state||null==this.style||null==this.state.routedPoints||0==this.state.routedPoints.length)d.apply(this,arguments);else{var C=mxUtils.getValue(this.style,mxConstants.STYLE_ARCSIZE,mxConstants.LINE_ARCSIZE)/2,F=(parseInt(mxUtils.getValue(this.style,
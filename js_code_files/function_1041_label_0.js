function(r){g.apply(this,arguments);this.graph.model.isEdge(r.cell)&&1!=r.style[mxConstants.STYLE_CURVED]&&this.updateLineJumps(r)};mxGraphView.prototype.updateLineJumps=function(r){var x=r.absolutePoints;if(Graph.lineJumpsEnabled){var B=null!=r.routedPoints,C=null;if(null!=x&&null!=this.validEdges&&"none"!==mxUtils.getValue(r.style,"jumpStyle","none")){var F=function(fa,ra,L){var V=new mxPoint(ra,L);V.type=fa;C.push(V);V=null!=r.routedPoints?r.routedPoints[C.length-1]:null;return null==V||V.type!=
fa||V.x!=ra||V.y!=L},H=.5*this.scale;B=!1;C=[];for(var E=0;E<x.length-1;E++){for(var N=x[E+1],Q=x[E],S=[],R=x[E+2];E<x.length-2&&mxUtils.ptSegDistSq(Q.x,Q.y,R.x,R.y,N.x,N.y)<1*this.scale*this.scale;)N=R,E++,R=x[E+2];B=F(0,Q.x,Q.y)||B;for(var ba=0;ba<this.validEdges.length;ba++){var T=this.validEdges[ba],P=T.absolutePoints;if(null!=P&&mxUtils.intersects(r,T)&&"1"!=T.style.noJump)for(T=0;T<P.length-1;T++){var Y=P[T+1],ka=P[T];for(R=P[T+2];T<P.length-2&&mxUtils.ptSegDistSq(ka.x,ka.y,R.x,R.y,Y.x,Y.y)<
Graph.prototype.createCrossFunctionalSwimlane=function(b,e,k,l,B,q,D,N,S){k=null!=k?k:120;l=null!=l?l:120;D=null!=D?D:"shape=tableRow;horizontal=0;swimlaneHead=0;swimlaneBody=0;top=0;left=0;bottom=0;right=0;dropTarget=0;fontStyle=0;fillColor=none;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;startSize=40;collapsible=0;recursiveResize=0;expand=0;";N=null!=N?N:"swimlane;swimlaneHead=0;swimlaneBody=0;fontStyle=0;connectable=0;fillColor=none;startSize=40;collapsible=0;recursiveResize=0;expand=0;";
S=null!=S?S:"swimlane;swimlaneHead=0;swimlaneBody=0;fontStyle=0;connectable=0;fillColor=none;startSize=0;collapsible=0;recursiveResize=0;expand=0;";B=this.createVertex(null,null,null!=B?B:"",0,0,e*k,b*l,null!=q?q:"shape=table;childLayout=tableLayout;"+(null==B?"startSize=0;fillColor=none;":"startSize=40;")+"collapsible=0;recursiveResize=0;expand=0;");q=mxUtils.getValue(this.getCellStyle(B),mxConstants.STYLE_STARTSIZE,mxConstants.DEFAULT_STARTSIZE);B.geometry.width+=q;B.geometry.height+=q;D=this.createVertex(null,
null,"",0,q,e*k+q,l,D);B.insert(this.createParent(D,this.createVertex(null,null,"",q,0,k,l,N),e,k,0));return 1<b?(D.geometry.y=l+q,this.createParent(B,this.createParent(D,this.createVertex(null,null,"",q,0,k,l,S),e,k,0),b-1,0,l)):B};
Graph.removeKeys(D,function(G){return 0>mxUtils.indexOf(R,G)});this.updateCellStyles(D,M)};Graph.prototype.updateCellStyles=function(D,M){this.model.beginUpdate();try{for(var R=0;R<M.length;R++)if(this.model.isVertex(M[R])||this.model.isEdge(M[R])){var G=this.getCellStyle(M[R],!1),L;for(L in D){var Q=D[L];G[L]!=Q&&this.setCellStyles(L,Q,[M[R]])}}}finally{this.model.endUpdate()}};Graph.prototype.isFastZoomEnabled=function(){return"nocss"!=urlParams.zoom&&!mxClient.NO_FO&&!mxClient.IS_EDGE&&!this.useCssTransforms&&
(this.isCssTransformsSupported()||mxClient.IS_IOS)};Graph.prototype.isCssTransformsSupported=function(){return this.dialect==mxConstants.DIALECT_SVG&&!mxClient.NO_FO&&(!this.lightbox||!mxClient.IS_SF)};Graph.prototype.getCellAt=function(D,M,R,G,L,Q){this.useCssTransforms&&(D=D/this.currentScale-this.currentTranslate.x,M=M/this.currentScale-this.currentTranslate.y);return this.getScaledCellAt.apply(this,arguments)};Graph.prototype.getScaledCellAt=function(D,M,R,G,L,Q){G=null!=G?G:!0;L=null!=L?L:!0;
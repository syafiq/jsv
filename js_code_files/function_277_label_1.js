u+.855*t);c.end();c.stroke()};mxCellRenderer.registerShape("sumEllipse",ta);mxUtils.extend(za,mxRhombus);za.prototype.paintVertexShape=function(c,m,u,n,t){mxRhombus.prototype.paintVertexShape.apply(this,arguments);c.setShadow(!1);c.begin();c.moveTo(m,u+t/2);c.lineTo(m+n,u+t/2);c.end();c.stroke()};mxCellRenderer.registerShape("sortShape",za);mxUtils.extend(Ga,mxEllipse);Ga.prototype.paintVertexShape=function(c,m,u,n,t){c.begin();c.moveTo(m,u);c.lineTo(m+n,u);c.lineTo(m+n/2,u+t/2);c.close();c.fillAndStroke();
c.begin();c.moveTo(m,u+t);c.lineTo(m+n,u+t);c.lineTo(m+n/2,u+t/2);c.close();c.fillAndStroke()};mxCellRenderer.registerShape("collate",Ga);mxUtils.extend(Oa,mxEllipse);Oa.prototype.paintVertexShape=function(c,m,u,n,t){var z=c.state.strokeWidth/2,B=10+2*z,fa=u+t-B/2;c.begin();c.moveTo(m,u);c.lineTo(m,u+t);c.moveTo(m+z,fa);c.lineTo(m+z+B,fa-B/2);c.moveTo(m+z,fa);c.lineTo(m+z+B,fa+B/2);c.moveTo(m+z,fa);c.lineTo(m+n-z,fa);c.moveTo(m+n,u);c.lineTo(m+n,u+t);c.moveTo(m+n-z,fa);c.lineTo(m+n-B-z,fa-B/2);c.moveTo(m+
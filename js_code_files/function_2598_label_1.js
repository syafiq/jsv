Graph.prototype.createCrossFunctionalSwimlane=function(b,e,k,l,C,p,D,M,R){k=null!=k?k:120;l=null!=l?l:120;D=null!=D?D:"shape=tableRow;horizontal=0;swimlaneHead=0;swimlaneBody=0;top=0;left=0;bottom=0;right=0;dropTarget=0;fontStyle=0;fillColor=none;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;startSize=40;collapsible=0;recursiveResize=0;expand=0;";M=null!=M?M:"swimlane;swimlaneHead=0;swimlaneBody=0;fontStyle=0;connectable=0;fillColor=none;startSize=40;collapsible=0;recursiveResize=0;expand=0;";
R=null!=R?R:"swimlane;swimlaneHead=0;swimlaneBody=0;fontStyle=0;connectable=0;fillColor=none;startSize=0;collapsible=0;recursiveResize=0;expand=0;";C=this.createVertex(null,null,null!=C?C:"",0,0,e*k,b*l,null!=p?p:"shape=table;childLayout=tableLayout;"+(null==C?"startSize=0;fillColor=none;":"startSize=40;")+"collapsible=0;recursiveResize=0;expand=0;");p=mxUtils.getValue(this.getCellStyle(C),mxConstants.STYLE_STARTSIZE,mxConstants.DEFAULT_STARTSIZE);C.geometry.width+=p;C.geometry.height+=p;D=this.createVertex(null,
null,"",0,p,e*k+p,l,D);C.insert(this.createParent(D,this.createVertex(null,null,"",p,0,k,l,M),e,k,0));return 1<b?(D.geometry.y=l+p,this.createParent(C,this.createParent(D,this.createVertex(null,null,"",p,0,k,l,R),e,k,0),b-1,0,l)):C};
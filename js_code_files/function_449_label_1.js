!1;try{var k=JSON.parse(d.getText());null!=k&&"Resource not accessible by integration"==k.message?e():(null!=k&&null!=k.errors&&0<k.errors.length&&(g="too_large"==k.errors[0].code),c({message:mxResources.get(g?"drawingTooLarge":"forbidden")}))}catch(n){c({message:mxResources.get(g?"drawingTooLarge":"forbidden")})}}else 404===d.getStatus()?m?c({code:d.getStatus(),message:this.getErrorMessage(d,mxResources.get("fileNotFound"))}):e():409===d.getStatus()?c({code:d.getStatus(),status:409}):c({code:d.getStatus(),
message:this.getErrorMessage(d,mxResources.get("error")+" "+d.getStatus())})}),mxUtils.bind(this,function(e){window.clearTimeout(A);z&&c(e)}))}),y=mxUtils.bind(this,function(B){null==this.user?this.updateUser(function(){y(!0)},c,B):t(B)});null==b?this.authenticate(function(){y(!0)},c):y(!1)};GitHubClient.prototype.getLibrary=function(d,f,c){this.getFile(d,f,c,!0)};GitHubClient.prototype.getSha=function(d,f,c,l,m,t,y){var B="&t="+(new Date).getTime();d=new mxXmlRequest(this.baseUrl+"/repos/"+d+"/"+